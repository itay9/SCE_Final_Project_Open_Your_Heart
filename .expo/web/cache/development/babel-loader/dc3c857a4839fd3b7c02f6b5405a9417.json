{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nvar API_KEY = 'AIzaSyBfk2mWM9pe00OXd6jO2LlGrTIXeNxlTsM';\n\nfunction authenticate(mode, email, password) {\n  var url, response, token;\n  return _regeneratorRuntime.async(function authenticate$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://identitytoolkit.googleapis.com/v1/accounts:\" + mode + \"?key=\" + API_KEY;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url, {\n            email: email,\n            password: password,\n            returnSecureToken: true\n          }));\n\n        case 3:\n          response = _context.sent;\n          token = response.data.idToken;\n          return _context.abrupt(\"return\", token);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function createUser(email, password) {\n  return authenticate('signUp', email, password);\n}\nexport function login(email, password) {\n  return authenticate('signInWithPassword', email, password);\n}","map":{"version":3,"names":["axios","API_KEY","authenticate","mode","email","password","url","post","returnSecureToken","response","token","data","idToken","createUser","login"],"sources":["C:/Users/yaniv/Desktop/react-native-project/util/auth.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'AIzaSyBfk2mWM9pe00OXd6jO2LlGrTIXeNxlTsM';\n\nasync function authenticate(mode, email, password) {\n  const url = `https://identitytoolkit.googleapis.com/v1/accounts:${mode}?key=${API_KEY}`;\n\n  const response = await axios.post(url, {\n    email: email,\n    password: password,\n    returnSecureToken: true,\n  });\n\n  const token = response.data.idToken;\n\n  return token;\n}\n\nexport function createUser(email, password) {\n  return authenticate('signUp', email, password);\n}\n\nexport function login(email, password) {\n  return authenticate('signInWithPassword', email, password);\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,yCAAhB;;AAEA,SAAeC,YAAf,CAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,QAAzC;EAAA;EAAA;IAAA;MAAA;QAAA;UACQC,GADR,2DACoEH,IADpE,aACgFF,OADhF;UAAA;UAAA,iCAGyBD,KAAK,CAACO,IAAN,CAAWD,GAAX,EAAgB;YACrCF,KAAK,EAAEA,KAD8B;YAErCC,QAAQ,EAAEA,QAF2B;YAGrCG,iBAAiB,EAAE;UAHkB,CAAhB,CAHzB;;QAAA;UAGQC,QAHR;UASQC,KATR,GASgBD,QAAQ,CAACE,IAAT,CAAcC,OAT9B;UAAA,iCAWSF,KAXT;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAcA,OAAO,SAASG,UAAT,CAAoBT,KAApB,EAA2BC,QAA3B,EAAqC;EAC1C,OAAOH,YAAY,CAAC,QAAD,EAAWE,KAAX,EAAkBC,QAAlB,CAAnB;AACD;AAED,OAAO,SAASS,KAAT,CAAeV,KAAf,EAAsBC,QAAtB,EAAgC;EACrC,OAAOH,YAAY,CAAC,oBAAD,EAAuBE,KAAvB,EAA8BC,QAA9B,CAAnB;AACD"},"metadata":{},"sourceType":"module"}