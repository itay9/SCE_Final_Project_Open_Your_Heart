{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AuthContent from \"../components/Auth/AuthContent\";\nimport LoadingOverlay from \"../components/ui/LoadingOverlay\";\nimport { AuthContext } from \"../store/auth-context\";\nimport { createUser } from \"../util/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction SignupScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuthenticating = _useState2[0],\n      setIsAuthenticating = _useState2[1];\n\n  var authCtx = useContext(AuthContext);\n\n  function signupHandler(_ref) {\n    var email, password, token;\n    return _regeneratorRuntime.async(function signupHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref.email, password = _ref.password;\n            setIsAuthenticating(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(createUser(email, password));\n\n          case 5:\n            token = _context.sent;\n            authCtx.authenticate(token);\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            Alert.alert('יצירת משתמש נכשלה', 'אנא בדוק את האמייל או את הסיסמה שהזנת.');\n            setIsAuthenticating(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  }\n\n  if (isAuthenticating) {\n    return _jsx(LoadingOverlay, {\n      message: \"\\u05D9\\u05D5\\u05E6\\u05E8 \\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\"\n    });\n  }\n\n  return _jsx(AuthContent, {\n    onAuthenticate: signupHandler\n  });\n}\n\nexport default SignupScreen;","map":{"version":3,"names":["useContext","useState","AuthContent","LoadingOverlay","AuthContext","createUser","SignupScreen","isAuthenticating","setIsAuthenticating","authCtx","signupHandler","email","password","token","authenticate","Alert","alert"],"sources":["C:/Users/yaniv/Desktop/react-native-project/screens/SignupScreen.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { Alert } from 'react-native';\n\nimport AuthContent from '../components/Auth/AuthContent';\nimport LoadingOverlay from '../components/ui/LoadingOverlay';\nimport { AuthContext } from '../store/auth-context';\nimport { createUser } from '../util/auth';\n\nfunction SignupScreen() {\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\n\n  const authCtx = useContext(AuthContext);\n\n  async function signupHandler({ email, password }) {\n    setIsAuthenticating(true);\n    try {\n      const token = await createUser(email, password);\n      authCtx.authenticate(token);\n    } catch (error) {\n      Alert.alert(\n        'יצירת משתמש נכשלה',\n        'אנא בדוק את האמייל או את הסיסמה שהזנת.'\n      );\n      setIsAuthenticating(false);\n    }\n  }\n\n  if (isAuthenticating) {\n    return <LoadingOverlay message=\"יוצר משתמש\" />;\n  }\n\n  return <AuthContent onAuthenticate={signupHandler} />;\n}\n\nexport default SignupScreen;\n"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;AAGA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,SAASC,WAAT;AACA,SAASC,UAAT;;;AAEA,SAASC,YAAT,GAAwB;EACtB,gBAAgDL,QAAQ,CAAC,KAAD,CAAxD;EAAA;EAAA,IAAOM,gBAAP;EAAA,IAAyBC,mBAAzB;;EAEA,IAAMC,OAAO,GAAGT,UAAU,CAACI,WAAD,CAA1B;;EAEA,SAAeM,aAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAA+BC,KAA/B,QAA+BA,KAA/B,EAAsCC,QAAtC,QAAsCA,QAAtC;YACEJ,mBAAmB,CAAC,IAAD,CAAnB;YADF;YAAA;YAAA,iCAGwBH,UAAU,CAACM,KAAD,EAAQC,QAAR,CAHlC;;UAAA;YAGUC,KAHV;YAIIJ,OAAO,CAACK,YAAR,CAAqBD,KAArB;YAJJ;YAAA;;UAAA;YAAA;YAAA;YAMIE,KAAK,CAACC,KAAN,CACE,mBADF,EAEE,wCAFF;YAIAR,mBAAmB,CAAC,KAAD,CAAnB;;UAVJ;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAcA,IAAID,gBAAJ,EAAsB;IACpB,OAAO,KAAC,cAAD;MAAgB,OAAO,EAAC;IAAxB,EAAP;EACD;;EAED,OAAO,KAAC,WAAD;IAAa,cAAc,EAAEG;EAA7B,EAAP;AACD;;AAED,eAAeJ,YAAf"},"metadata":{},"sourceType":"module"}